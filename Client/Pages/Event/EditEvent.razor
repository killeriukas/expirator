@page "/eventdata/edit/{id:int}"
@using Shared.Dtos
@using Client.Components.Event
@using Microsoft.AspNetCore.JsonPatch
@using Palit.AspNetCore.JsonPatch.Extensions.Generate
@using Newtonsoft.Json

@inject HttpClient http
@inject NavigationManager navigationManager
@inject AutoMapper.IMapper mapper


<div class="row justify-content-center">
    <div class="col-auto">
        <h2>Editing @createEventData?.Name</h2>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-6">
        @if(createEventData == null) {
            <p>Loading item...</p>
        } else {
            <EventForm createEventData="@createEventData"></EventForm>
            <div class="form-row">
                <div class="form-group col">
                    <a class="btn btn-danger form-control" href="/">Back</a>
                </div>
                <div class="form-group col">
                    <button class="btn btn-success form-control" @onclick="OnUpdateClicked">Update</button>
                </div>
            </div>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    private EventDataReadDto originalEventData = null;

    private EventDataCreateDto createEventData = null;

    protected override async Task OnInitializedAsync() {
        originalEventData = await http.GetFromJsonAsync<EventDataReadDto>($"api/eventdata/{Id}");
        createEventData = mapper.Map<EventDataCreateDto>(originalEventData);
    }

    private async Task OnUpdateClicked() {
        JsonPatchDocumentGenerator patchGenerator = new JsonPatchDocumentGenerator();

        EventDataUpdateDto original = mapper.Map<EventDataUpdateDto>(originalEventData);
        EventDataUpdateDto updated = mapper.Map<EventDataUpdateDto>(createEventData);

        JsonPatchDocument jsonPatch = patchGenerator.Generate<EventDataUpdateDto>(original, updated);
        string diffJson = JsonConvert.SerializeObject(jsonPatch);

        await http.PatchAsync($"api/eventdata/{Id}", new StringContent(diffJson, System.Text.Encoding.UTF8, "application/json"));
        navigationManager.NavigateTo("/");
    }

}
